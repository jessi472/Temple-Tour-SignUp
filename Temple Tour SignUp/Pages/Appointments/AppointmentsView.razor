@page "/Appointments/Appointments"
@page "/Appointments"


@inherits OwningComponentBase<IAppointmentRepo> 


<table class="table table-bordered table-info">


    <thead>
        <tr>
            <th>Group Name</th>
            <th>Group Size</th>
            <th>Email Address</th>
            <th>PHone Number</th>
            <th>Date</th>
            <th>Time</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (AppointmentData?.Count() > 0)
        {

            @foreach (Appointment a in AppointmentData)
            {
        <tr>
            <td>@a.GroupName</td>
            <td>@a.GroupSize</td>
            <td>@a.Email</td>
            <td>@a.Phone</td>
            @*Should add in the time slot for each appointment*@
     
           <td>@a.TimeSlot.Date</td>
            <td>@a.TimeSlot.Time</td>


            <td><NavLink class="btn btn-warning btn-sm" href="@GetEditUrl(a.AppointmentId)">Edit</NavLink></td>
            <td><button class="btn btn-danger btn-sm" @onclick="@(x=>DeleteAppointment(a))">Delete</button></td>
        </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="8" class="text-secondary text-center font-weight-bold">No Appointments Scheduled</td>
            </tr>
        }
    </tbody>
</table>



<!-- Button trigger modal -->
<!--<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
    Launch static backdrop modal
</button>-->

<!-- Modal -->
<!--<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Understood</button>
            </div>
        </div>
    </div>
</div>-->



@code {
    public IAppointmentRepo repo => Service;

    public IEnumerable<Appointment> AppointmentData { get; set; }
    public IEnumerable<TimeSlot> TimeSlots { get; set; }

    protected async override Task OnInitializedAsync()
    {

        await UpdateData();
    }

    public async Task UpdateData()
    {
        AppointmentData = await repo.Appointments
            .Include(t =>t.TimeSlot)
            .ToListAsync();
    }

    public async Task DeleteAppointment(Appointment a)
    {
        repo.DeleteAppoint(a);
        await UpdateData();
    }

    //add in edit options
    public string GetEditUrl(long Id) => $"/appointments/appointmentsview/appointedit/{Id}";

}

